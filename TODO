<perhaps I could be filing some of these as "issues" in GitHub?>

Use template snippets or custom tags to remove duplication in various views
 - standard "breadcrumb" type navigation at top
 - some of the duplication in table views

Come up with some sort of canonical row id
 - if data keeps updating, pandas row ids aren't exactly stable
 - it's somewhat crazy that crsid is not unique
 - could maybe build an ID out of other columns
   - and just excluding based on project id shouldn't do too much harm?

Figure out how to keep row exclusions from breaking if data under them changes
  - new filtering may cause those rows to not exist anymore, which should be fine...

Look at using PyTables/HDF5 to store data
 - may be necessary due to large data size if we end up hosting on a modest (i.e. affordable) Amazon instance
 - turns out this doesn't work as PyTables can't handle variable-length strings
    - we can't afford to use the maximum string length in our columns, that would be prohibitively large
 - maybe we use h5py, or maybe look at sqlite/other solutions

Also look at SQL/NoSQL databases with some sort of indexing
 - not sure what will have best performance

Add ability to delete queries?

Figure out a way to collapse duplication between create/edit

Formalize the setup process
 - script that downloads the files via wget/curl/etc
 - puts them in some sort of versioned directory
 - unzips them, converts to strip redundant BOMs etc
 - concatenates into a master file

Lock down Django
 - toggle debug to false
 - externalize secret key
 - add authentication/login, maybe permissions?
